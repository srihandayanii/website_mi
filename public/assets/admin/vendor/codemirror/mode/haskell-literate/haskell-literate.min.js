(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"),require("../haskell/haskell"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror","../haskell/haskell"],a)}else{a(CodeMirror)}}})(function(a){a.defineMode("haskell-literate",function(c,d){var b=a.getMode(c,(d&&d.base)||"haskell");return{startState:function(){return{inCode:false,baseState:a.startState(b)}},token:function(f,e){if(f.sol()){if(e.inCode=f.eat(">")){return"meta"}}if(e.inCode){return b.token(f,e.baseState)}else{f.skipToEnd();return"comment"}},innerMode:function(e){return e.inCode?{state:e.baseState,mode:b}:null}}},"haskell");a.defineMIME("text/x-literate-haskell","haskell-literate")});