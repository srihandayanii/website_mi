(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],a)}else{a(CodeMirror)}}})(function(a){a.defineMode("scheme",function(){var e="builtin",f="comment",v="string",b="atom",q="number",d="bracket";var i=2;function p(y){var x={},z=y.split(" ");for(var w=0;w<z.length;++w){x[z[w]]=true}return x}var o=p("? case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?");var j=p("define let letrec let* lambda");function u(w,y,x){this.indent=w;this.type=y;this.prev=x}function t(x,w,y){x.indentStack=new u(w,y,x.indentStack)}function s(w){w.indentStack=w.indentStack.prev}var c=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i);var r=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i);var h=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i);var g=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);function k(w){return w.match(c)}function n(w){return w.match(r)}function l(x,w){if(w===true){x.backUp(1)}return x.match(g)}function m(w){return w.match(h)}return{startState:function(){return{indentStack:null,indentation:0,mode:false,sExprComment:false}},token:function(I,H){if(H.indentStack==null&&I.sol()){H.indentation=I.indentation()}if(I.eatSpace()){return null}var G=null;switch(H.mode){case"string":var E,x=false;while((E=I.next())!=null){if(E=='"'&&!x){H.mode=false;break}x=!x&&E=="\\"}G=v;break;case"comment":var E,D=false;while((E=I.next())!=null){if(E=="#"&&D){H.mode=false;break}D=(E=="|")}G=f;break;case"s-expr-comment":H.mode=false;if(I.peek()=="("||I.peek()=="["){H.sExprComment=0}else{I.eatWhile(/[^/s]/);G=f;break}default:var w=I.next();if(w=='"'){H.mode="string";G=v}else{if(w=="'"){G=b}else{if(w=="#"){if(I.eat("|")){H.mode="comment";G=f}else{if(I.eat(/[tf]/i)){G=b}else{if(I.eat(";")){H.mode="s-expr-comment";G=f}else{var F=null,y=false,z=true;if(I.eat(/[ei]/i)){y=true}else{I.backUp(1)}if(I.match(/^#b/i)){F=k}else{if(I.match(/^#o/i)){F=n}else{if(I.match(/^#x/i)){F=m}else{if(I.match(/^#d/i)){F=l}else{if(I.match(/^[-+0-9.]/,false)){z=false;F=l}else{if(!y){I.eat("#")}}}}}}if(F!=null){if(z&&!y){I.match(/^#[ei]/i)}if(F(I)){G=q}}}}}}else{if(/^[-+0-9.]/.test(w)&&l(I,true)){G=q}else{if(w==";"){I.skipToEnd();G=f}else{if(w=="("||w=="["){var B="";var A=I.column(),C;while((C=I.eat(/[^\s\(\[\;\)\]]/))!=null){B+=C}if(B.length>0&&j.propertyIsEnumerable(B)){t(H,A+i,w)}else{I.eatSpace();if(I.eol()||I.peek()==";"){t(H,A+1,w)}else{t(H,A+I.current().length,w)}}I.backUp(I.current().length-1);if(typeof H.sExprComment=="number"){H.sExprComment++}G=d}else{if(w==")"||w=="]"){G=d;if(H.indentStack!=null&&H.indentStack.type==(w==")"?"(":"[")){s(H);if(typeof H.sExprComment=="number"){if(--H.sExprComment==0){G=f;H.sExprComment=false}}}}else{I.eatWhile(/[\w\$_\-!$%&*+\.\/:<=>?@\^~]/);if(o&&o.propertyIsEnumerable(I.current())){G=e}else{G="variable"}}}}}}}}}return(typeof H.sExprComment=="number")?f:G},indent:function(w){if(w.indentStack==null){return w.indentation}return w.indentStack.indent},closeBrackets:{pairs:'()[]{}""'},lineComment:";;"}});a.defineMIME("text/x-scheme","scheme")});