(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],a)}else{a(CodeMirror)}}})(function(a){function b(d){var c=d.match(/^\s*\S/);d.skipToEnd();return c?"error":null}a.defineMode("asciiarmor",function(){return{token:function(f,e){var c;if(e.state=="top"){if(f.sol()&&(c=f.match(/^-----BEGIN (.*)?-----\s*$/))){e.state="headers";e.type=c[1];return"tag"}return b(f)}else{if(e.state=="headers"){if(f.sol()&&f.match(/^\w+:/)){e.state="header";return"atom"}else{var d=b(f);if(d){e.state="body"}return d}}else{if(e.state=="header"){f.skipToEnd();e.state="headers";return"string"}else{if(e.state=="body"){if(f.sol()&&(c=f.match(/^-----END (.*)?-----\s*$/))){if(c[1]!=e.type){return"error"}e.state="end";return"tag"}else{if(f.eatWhile(/[A-Za-z0-9+\/=]/)){return null}else{f.next();return"error"}}}else{if(e.state=="end"){return b(f)}}}}}},blankLine:function(c){if(c.state=="headers"){c.state="body"}},startState:function(){return{state:"top",type:null}}}});a.defineMIME("application/pgp","asciiarmor");a.defineMIME("application/pgp-keys","asciiarmor");a.defineMIME("application/pgp-signature","asciiarmor")});