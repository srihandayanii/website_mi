(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],a)}else{a(CodeMirror)}}})(function(a){a.defineMode("groovy",function(d){function p(s){var r={},t=s.split(" ");for(var q=0;q<t.length;++q){r[t[q]]=true}return r}var h=p("abstract as assert boolean break byte case catch char class const continue def default do double else enum extends final finally float for goto if implements import in instanceof int interface long native new package private protected public return short static strictfp super switch synchronized threadsafe throw throws transient try void volatile while");var c=p("catch class do else finally for if switch try while enum interface def");var k=p("return break continue");var b=p("null true false this");var f;function m(t,s){var q=t.next();if(q=='"'||q=="'"){return l(q,t,s)}if(/[\[\]{}\(\),;\:\.]/.test(q)){f=q;return null}if(/\d/.test(q)){t.eatWhile(/[\w\.]/);if(t.eat(/eE/)){t.eat(/\+\-/);t.eatWhile(/\d/)}return"number"}if(q=="/"){if(t.eat("*")){s.tokenize.push(o);return o(t,s)}if(t.eat("/")){t.skipToEnd();return"comment"}if(g(s.lastToken,false)){return l(q,t,s)}}if(q=="-"&&t.eat(">")){f="->";return null}if(/[+\-*&%=<>!?|\/~]/.test(q)){t.eatWhile(/[+\-*&%=<>|~]/);return"operator"}t.eatWhile(/[\w\$_]/);if(q=="@"){t.eatWhile(/[\w\$_\.]/);return"meta"}if(s.lastToken=="."){return"property"}if(t.eat(":")){f="proplabel";return"property"}var r=t.current();if(b.propertyIsEnumerable(r)){return"atom"}if(h.propertyIsEnumerable(r)){if(c.propertyIsEnumerable(r)){f="newstatement"}else{if(k.propertyIsEnumerable(r)){f="standalone"}}return"keyword"}return"variable"}m.isBase=true;function l(q,s,r){var v=false;if(q!="/"&&s.eat(q)){if(s.eat(q)){v=true}else{return"string"}}function u(z,y){var w=false,x,t=!v;while((x=z.next())!=null){if(x==q&&!w){if(!v){break}if(z.match(q+q)){t=true;break}}if(q=='"'&&x=="$"&&!w&&z.eat("{")){y.tokenize.push(n());return"string"}w=!w&&x=="\\"}if(t){y.tokenize.pop()}return"string"}r.tokenize.push(u);return u(s,r)}function n(){var q=1;function r(t,s){if(t.peek()=="}"){q--;if(q==0){s.tokenize.pop();return s.tokenize[s.tokenize.length-1](t,s)}}else{if(t.peek()=="{"){q++}}return m(t,s)}r.isBase=true;return r}function o(t,s){var r=false,q;while(q=t.next()){if(q=="/"&&r){s.tokenize.pop();break}r=(q=="*")}return"comment"}function g(q,r){return !q||q=="operator"||q=="->"||/[\.\[\{\(,;:]/.test(q)||q=="newstatement"||q=="keyword"||q=="proplabel"||(q=="standalone"&&!r)}function e(s,r,u,q,t){this.indented=s;this.column=r;this.type=u;this.align=q;this.prev=t}function j(r,q,s){return r.context=new e(r.indented,q,s,null,r.context)}function i(q){var r=q.context.type;if(r==")"||r=="]"||r=="}"){q.indented=q.context.indented}return q.context=q.context.prev}return{startState:function(q){return{tokenize:[m],context:new e((q||0)-d.indentUnit,0,"top",false),indented:0,startOfLine:true,lastToken:null}},token:function(s,r){var q=r.context;if(s.sol()){if(q.align==null){q.align=false}r.indented=s.indentation();r.startOfLine=true;if(q.type=="statement"&&!g(r.lastToken,true)){i(r);q=r.context}}if(s.eatSpace()){return null}f=null;var t=r.tokenize[r.tokenize.length-1](s,r);if(t=="comment"){return t}if(q.align==null){q.align=true}if((f==";"||f==":")&&q.type=="statement"){i(r)}else{if(f=="->"&&q.type=="statement"&&q.prev.type=="}"){i(r);r.context.align=false}else{if(f=="{"){j(r,s.column(),"}")}else{if(f=="["){j(r,s.column(),"]")}else{if(f=="("){j(r,s.column(),")")}else{if(f=="}"){while(q.type=="statement"){q=i(r)}if(q.type=="}"){q=i(r)}while(q.type=="statement"){q=i(r)}}else{if(f==q.type){i(r)}else{if(q.type=="}"||q.type=="top"||(q.type=="statement"&&f=="newstatement")){j(r,s.column(),"statement")}}}}}}}}r.startOfLine=false;r.lastToken=f||t;return t},indent:function(t,u){if(!t.tokenize[t.tokenize.length-1].isBase){return 0}var s=u&&u.charAt(0),r=t.context;if(r.type=="statement"&&!g(t.lastToken,true)){r=r.prev}var q=s==r.type;if(r.type=="statement"){return r.indented+(s=="{"?0:d.indentUnit)}else{if(r.align){return r.column+(q?0:1)}else{return r.indented+(q?0:d.indentUnit)}}},electricChars:"{}",closeBrackets:{triples:"'\""},fold:"brace"}});a.defineMIME("text/x-groovy","groovy")});